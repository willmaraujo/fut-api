/*
 * FutDB
 * The Fifa Ultimate Team Database API is a JSON REST API.<br> We offer a complete, easy to understand JSON REST API with a complete database of players, prices, nations, leagues, clubs, and card-types.<br> Please note that some data fields are only delivered with a premium account.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import com.google.gson.annotations.SerializedName;


import java.util.Objects;

/**
 * PlayerSearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T14:15:34.912+02:00")
public class PlayerSearchRequest {
  @SerializedName("name")
  private String name = null;

  @SerializedName("rating_min")
  private Integer ratingMin = null;

  @SerializedName("rating_max")
  private Integer ratingMax = null;

  @SerializedName("rating")
  private Integer rating = null;

  @SerializedName("rarity")
  private Integer rarity = null;

  @SerializedName("position")
  private String position = null;

  @SerializedName("club")
  private Integer club = null;

  @SerializedName("league")
  private Integer league = null;

  @SerializedName("nation")
  private Integer nation = null;

  @SerializedName("weak_foot")
  private Integer weakFoot = null;

  @SerializedName("skill_moves")
  private Integer skillMoves = null;

  public PlayerSearchRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PlayerSearchRequest ratingMin(Integer ratingMin) {
    this.ratingMin = ratingMin;
    return this;
  }

   /**
   * Get ratingMin
   * @return ratingMin
  **/

  public Integer getRatingMin() {
    return ratingMin;
  }

  public void setRatingMin(Integer ratingMin) {
    this.ratingMin = ratingMin;
  }

  public PlayerSearchRequest ratingMax(Integer ratingMax) {
    this.ratingMax = ratingMax;
    return this;
  }

   /**
   * Get ratingMax
   * @return ratingMax
  **/

  public Integer getRatingMax() {
    return ratingMax;
  }

  public void setRatingMax(Integer ratingMax) {
    this.ratingMax = ratingMax;
  }

  public PlayerSearchRequest rating(Integer rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/

  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public PlayerSearchRequest rarity(Integer rarity) {
    this.rarity = rarity;
    return this;
  }

   /**
   * Get rarity
   * @return rarity
  **/

  public Integer getRarity() {
    return rarity;
  }

  public void setRarity(Integer rarity) {
    this.rarity = rarity;
  }

  public PlayerSearchRequest position(String position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/

  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }

  public PlayerSearchRequest club(Integer club) {
    this.club = club;
    return this;
  }

   /**
   * Get club
   * @return club
  **/

  public Integer getClub() {
    return club;
  }

  public void setClub(Integer club) {
    this.club = club;
  }

  public PlayerSearchRequest league(Integer league) {
    this.league = league;
    return this;
  }

   /**
   * Get league
   * @return league
  **/

  public Integer getLeague() {
    return league;
  }

  public void setLeague(Integer league) {
    this.league = league;
  }

  public PlayerSearchRequest nation(Integer nation) {
    this.nation = nation;
    return this;
  }

   /**
   * Get nation
   * @return nation
  **/

  public Integer getNation() {
    return nation;
  }

  public void setNation(Integer nation) {
    this.nation = nation;
  }

  public PlayerSearchRequest weakFoot(Integer weakFoot) {
    this.weakFoot = weakFoot;
    return this;
  }

   /**
   * Get weakFoot
   * @return weakFoot
  **/

  public Integer getWeakFoot() {
    return weakFoot;
  }

  public void setWeakFoot(Integer weakFoot) {
    this.weakFoot = weakFoot;
  }

  public PlayerSearchRequest skillMoves(Integer skillMoves) {
    this.skillMoves = skillMoves;
    return this;
  }

   /**
   * Get skillMoves
   * @return skillMoves
  **/

  public Integer getSkillMoves() {
    return skillMoves;
  }

  public void setSkillMoves(Integer skillMoves) {
    this.skillMoves = skillMoves;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerSearchRequest playerSearchRequest = (PlayerSearchRequest) o;
    return Objects.equals(this.name, playerSearchRequest.name) &&
        Objects.equals(this.ratingMin, playerSearchRequest.ratingMin) &&
        Objects.equals(this.ratingMax, playerSearchRequest.ratingMax) &&
        Objects.equals(this.rating, playerSearchRequest.rating) &&
        Objects.equals(this.rarity, playerSearchRequest.rarity) &&
        Objects.equals(this.position, playerSearchRequest.position) &&
        Objects.equals(this.club, playerSearchRequest.club) &&
        Objects.equals(this.league, playerSearchRequest.league) &&
        Objects.equals(this.nation, playerSearchRequest.nation) &&
        Objects.equals(this.weakFoot, playerSearchRequest.weakFoot) &&
        Objects.equals(this.skillMoves, playerSearchRequest.skillMoves);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ratingMin, ratingMax, rating, rarity, position, club, league, nation, weakFoot, skillMoves);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerSearchRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ratingMin: ").append(toIndentedString(ratingMin)).append("\n");
    sb.append("    ratingMax: ").append(toIndentedString(ratingMax)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    rarity: ").append(toIndentedString(rarity)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    club: ").append(toIndentedString(club)).append("\n");
    sb.append("    league: ").append(toIndentedString(league)).append("\n");
    sb.append("    nation: ").append(toIndentedString(nation)).append("\n");
    sb.append("    weakFoot: ").append(toIndentedString(weakFoot)).append("\n");
    sb.append("    skillMoves: ").append(toIndentedString(skillMoves)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

