/*
 * FutDB
 * The Fifa Ultimate Team Database API is a JSON REST API.<br> We offer a complete, easy to understand JSON REST API with a complete database of players, prices, nations, leagues, clubs, and card-types.<br> Please note that some data fields are only delivered with a premium account.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

/**
 * PlayerPriceResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-24T14:15:34.912+02:00")
public class PlayerPriceResponse {
  @SerializedName("price")
  private Integer price = null;

  @SerializedName("platform")
  private String platform = null;

  @SerializedName("last_checked")
  private DateTime lastChecked = null;

  public PlayerPriceResponse price(Integer price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/

  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }

  public PlayerPriceResponse platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/

  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public PlayerPriceResponse lastChecked(DateTime lastChecked) {
    this.lastChecked = lastChecked;
    return this;
  }

   /**
   * Get lastChecked
   * @return lastChecked
  **/

  public DateTime getLastChecked() {
    return lastChecked;
  }

  public void setLastChecked(DateTime lastChecked) {
    this.lastChecked = lastChecked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerPriceResponse playerPriceResponse = (PlayerPriceResponse) o;
    return Objects.equals(this.price, playerPriceResponse.price) &&
        Objects.equals(this.platform, playerPriceResponse.platform) &&
        Objects.equals(this.lastChecked, playerPriceResponse.lastChecked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, platform, lastChecked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerPriceResponse {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    lastChecked: ").append(toIndentedString(lastChecked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

